[tool.poetry]
name = "project"
version = "0.1.0"
description = "Automação do ticket de alimentação"
authors = ["pferrariog <pdrferrari08@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10, <3.11"
requests = "^2.28.1"
selenium = "^4.4.3"
isort = "^5.10.1"
auto-py-to-exe = "^2.23.1"
black = "^22.12.0"
flake8 = "^4.0.1"                                           # guia de estilo de código
pyproject-flake8 = '^0.0.1a4'                               # libera a configuração do flake8 pro projeto
flake8-print = "^5.0.0"                                     # procura por prints no código
flake8-docstrings = "^1.6.0"                                # checa a existencia de docstrings
flake8-annotations = "^2.9.1"
flake8-bugbear = "^22.8.23"                                 # checa bugs e problemas de design
keyboard = "^0.13.5"
PyYAML = "^6.0"
pandas = "^1.5.3"
pre-commit = "^3.1.1"
commitizen = "^2.42.1"
openpyxl = "^3.1.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119                                           # limita o tamanho da linha a 119 caractéres
targer-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | \.env
  | cdk.out
  | \.vscode
  | build
  | dist
  | \.mypy_cache
  | \.idea
)\
'''

[tool.isort]
profile = 'black'
force_single_line = true
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
src_paths = ["project", "tests", "Snippets"]
line_length = 119


[tool.flake8]
max-line-length = 119
select = [
  "C",
  "E",
  "W",
  "F",
  "N",
  "B",
  #"ANN", # verificador de type annotations
  "T",
  "D",
  "B950",
]
ignore = [
  "E203",
  "E501",
  "D202",
  "D400",
  "D100",
  "D104",
  "ANN003",
  "ANN002",
  "ANN1",
]
per-file-ignores = [
  "tests/*:ANN,D"
]
exclude = [
  ".venv/*",
  ".idea/*",
  ".vscode/*"
]
